#!/usr/bin/env node
const debug = require('debug')('explorer');
const settings = require('../lib/settings');
const db = require('../lib/database');
const app = require('../app');

app.set('port', process.env.PORT || settings.port);

let dbString = 'mongodb://' + settings.dbsettings.user;
dbString = dbString + ':' + settings.dbsettings.password;
dbString = dbString + '@' + settings.dbsettings.address;
dbString = dbString + ':' + settings.dbsettings.port;
dbString = dbString + '/' + settings.dbsettings.database;

db.connect(dbString, function ()
{
	db.check_stats(settings.coin, function (exists)
	{
		if (exists == false)
		{
			console.log('no stats entry found, creating now..');
			db.create_stats(settings.coin, function ()
			{
			});
		}
		else
		{
			db.get_stats(settings.coin, function (stats)
			{
				app.locals.stats = stats;
			});
		}
	});
	// check markets
	const markets = settings.markets.enabled;
	for (let i = 0; i < markets.length; i++)
	{
		db.check_market(markets[i], function (market, exists)
		{
			if (exists == false)
			{
				console.log('no %s entry found, creating now..', market);
				db.create_market(settings.markets.coin, settings.markets.exchange, market, function ()
				{
				});
			}
		});
	}

	db.check_richlist(settings.coin, function (exists)
	{
		if (exists == false)
		{
			console.log('no richlist entry found, creating now..');
			db.create_richlist(settings.coin, function ()
			{

			});
		}
	});
	if (settings.heavy == true)
	{
		db.check_heavy(settings.coin, function (exists)
		{
			if (exists == false)
			{
				console.log('no heavy entry found, creating now..');
				db.create_heavy(settings.coin, function ()
				{

				});
			}
		});
	}

	const server = app.listen(app.get('port'), settings.hostname + "", function ()
	{
		debug('Express server listening on port ' + server.address().port);
	});
});
